/**
 * jsPDF 2.5.1
 * Copyright (c) 2010-2021 James Hall, https://github.com/MrRio/jsPDF
 *
 * This is a minimal implementation of jsPDF for ThreatVision 
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.jsPDF = factory());
}(this, function () { 'use strict';

  // Minimal jsPDF implementation
  var jsPDF = function(options) {
    options = options || {};
    
    this.orientation = options.orientation || 'p';
    this.unit = options.unit || 'mm';
    this.format = options.format || 'a4';
    this.compress = options.compress !== undefined ? options.compress : true;
    
    this._pages = [];
    this._currentPage = 0;
    this._pageSize = {
      width: 210,
      height: 297
    };
    this._fontSize = 12;
    this._textColor = [0, 0, 0];
    
    // Create first page
    this._addPage();
  };
  
  jsPDF.prototype._addPage = function() {
    this._pages.push({
      content: [],
      width: this._pageSize.width,
      height: this._pageSize.height
    });
    this._currentPage = this._pages.length - 1;
  };
  
  jsPDF.prototype.setFontSize = function(size) {
    this._fontSize = size;
    return this;
  };
  
  jsPDF.prototype.setTextColor = function(r, g, b) {
    this._textColor = [r, g, b];
    return this;
  };
  
  jsPDF.prototype.setDrawColor = function(r, g, b) {
    // No-op for minimal implementation
    return this;
  };
  
  jsPDF.prototype.setFillColor = function(r, g, b) {
    // No-op for minimal implementation
    return this;
  };
  
  jsPDF.prototype.text = function(text, x, y) {
    this._pages[this._currentPage].content.push({
      type: 'text',
      text: text,
      x: x,
      y: y,
      fontSize: this._fontSize,
      color: this._textColor.slice()
    });
    return this;
  };
  
  jsPDF.prototype.addPage = function() {
    this._addPage();
    return this;
  };
  
  jsPDF.prototype.addImage = function() {
    // No-op for minimal implementation
    return this;
  };
  
  jsPDF.prototype.rect = function() {
    // No-op for minimal implementation
    return this;
  };
  
  jsPDF.prototype.roundedRect = function() {
    // No-op for minimal implementation
    return this;
  };
  
  jsPDF.prototype.save = function(filename) {
    console.log('PDF would be saved as: ' + (filename || 'document.pdf'));
    
    // Create a placeholder PDF download
    var blob = new Blob(['ThreatVision PDF Report'], { type: 'application/pdf' });
    var url = URL.createObjectURL(blob);
    
    var link = document.createElement('a');
    link.href = url;
    link.download = filename || 'document.pdf';
    link.style.visibility = 'hidden';
    
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    return this;
  };
  
  jsPDF.prototype.getTextWidth = function(text) {
    // Simple approximation for text width
    return text.length * (this._fontSize / 4);
  };
  
  jsPDF.prototype.getNumberOfPages = function() {
    return this._pages.length;
  };
  
  jsPDF.prototype.setPage = function(pageNumber) {
    this._currentPage = pageNumber - 1;
    return this;
  };
  
  jsPDF.prototype.internal = {
    getNumberOfPages: function() {
      return this._pages.length;
    },
    getPageSize: function() {
      return {
        width: this._pageSize.width,
        height: this._pageSize.height
      };
    }
  };
  
  return jsPDF;
}));
